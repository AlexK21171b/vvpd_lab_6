"""
Модуль для выполния задания по 4 лабе вппд
"""

from itertools import product


def move(start, finish):
    """
    функция которая считает количество ходов, необходимое коню чтобы
    добраться из одной клетки шахматной доски до другой,
    создается массив расстояний с запредельными значениями
    точка страта обнуляется, затем изменяеется каждое значение,
    кроме стартового, минимальным соседним +1, чтобы все значения внутри
    поля заменились оптимальными проход продублирован по массиву 10 раз
    и в конце, вывоводится значение массива с индексом конечного поля.
    :param start: стартовая позиция коня
    :param finish: финальная позиция коня
    :return: количество необходимых ходов
    """
    a = [[100 for _ in '1'*12] for _ in '1'*12]
    a[start[0]+1][start[1]+1] = 0
    for _, i, j in product('1'*8, range(2, 10), range(2, 10)):
        if a[i][j] > 0:
            a[i][j] = min(a[i-2][j-1], a[i-2][j+1], a[i-1][j-2],
                          a[i-1][j+2], a[i+2][j-1], a[i+2][j+1],
                          a[i+1][j-2], a[i+1][j+2])+1
    return a[finish[0]+1][finish[1]+1]


def collision(start, finish):
    """
    функция которая считает, через какое минимальное количество ходов могут
    встретиться два коня, расположенных на двух разных клетках доски,
    количество ходов полученное из функци move делится на 2, если кони никогда
    не встретятся то результатом будет -1:
    :param start: позиция первого коня
    :param finish: позиция второго коня
    :return: минимальное количество ходов могут встретиться два коня
    """
    return -1 if move(start, finish) % 2 > 0 else move(start, finish) // 2
